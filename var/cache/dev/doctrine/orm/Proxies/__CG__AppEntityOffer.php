<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Offer extends \App\Entity\Offer implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'applied', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'notes', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'location', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'dateClosing', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'salary', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'dateCreated', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'contact', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'category'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'applied', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'notes', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'location', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'dateClosing', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'salary', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'dateCreated', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'contact', '' . "\0" . 'App\\Entity\\Offer' . "\0" . 'category'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Offer $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getReference(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference(string $reference): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(bool $status): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getApplied(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApplied', []);

        return parent::getApplied();
    }

    /**
     * {@inheritDoc}
     */
    public function setApplied(bool $applied): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApplied', [$applied]);

        return parent::setApplied($applied);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes(?string $notes): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', [$notes]);

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', []);

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation(?string $location): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', [$location]);

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateClosing(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateClosing', []);

        return parent::getDateClosing();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateClosing(?\DateTimeInterface $dateClosing): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateClosing', [$dateClosing]);

        return parent::setDateClosing($dateClosing);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalary(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalary', []);

        return parent::getSalary();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalary(?int $salary): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalary', [$salary]);

        return parent::setSalary($salary);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreated', []);

        return parent::getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreated(\DateTimeInterface $dateCreated): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreated', [$dateCreated]);

        return parent::setDateCreated($dateCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getContact(): ?\App\Entity\Contact
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContact', []);

        return parent::getContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setContact(?\App\Entity\Contact $contact): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContact', [$contact]);

        return parent::setContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory(): ?\App\Entity\Category
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(?\App\Entity\Category $category): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCandidate(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCandidate', []);

        return parent::getCandidate();
    }

    /**
     * {@inheritDoc}
     */
    public function addCandidate(\App\Entity\Candidate $candidate): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCandidate', [$candidate]);

        return parent::addCandidate($candidate);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCandidate(\App\Entity\Candidate $candidate): \App\Entity\Offer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCandidate', [$candidate]);

        return parent::removeCandidate($candidate);
    }

}
